version: "3"
services:
  nginx:
    container_name: tcmr_nginx
    build:
      context: nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        ALPINE_REPOSITORIES_REPLACE: ${ALPINE_REPOSITORIES_REPLACE}
        TZ: ${TZ}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${CODE_PATH}:/app/webapps/:rw
      - ${CONF_PATH}/nginx/conf/conf.d:/etc/nginx/conf.d:rw
      - ${CONF_PATH}/nginx/conf/vhost:/etc/nginx/vhost:rw
      - ${CONF_PATH}/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${LOG_PATH}/nginx:/var/log/nginx/:rw
    stdin_open: true
    tty: true
    restart: always
    networks:
      - tcmr

  tomcat:
    container_name: tcmr_tomcat
    build:
      context: tomcat
      args:
        TOMCAT_VERSION: ${TOMCAT_VERSION}
        DEBIAN_REPOSITORIES_REPLACE: ${DEBIAN_REPOSITORIES_REPLACE}
    ports:
      - "${TOMCAT_HOST_PORT}:8080"
    volumes:
      - ${CONF_PATH}/tomcat/conf:/usr/local/tomcat/conf:rw
      - ${CODE_PATH}:/usr/local/tomcat/webapps:rw
      - ${LOG_PATH}/tomcat:/usr/local/tomcat/logs:rw
    restart: always
    environment:
      TOMCAT_JAVA_OPTS: "${TOMCAT_JAVA_OPTS}"
      TZ: "${TZ}"
    networks:
      - tcmr

  openjdk:
    container_name: tcmr_openjdk
    build:
      context: openjdk
      args:
        OPENJDK_VERSION: ${OPENJDK_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        ALPINE_REPOSITORIES_REPLACE: ${ALPINE_REPOSITORIES_REPLACE}
        DEBIAN_REPOSITORIES_REPLACE: ${DEBIAN_REPOSITORIES_REPLACE}
        OPENJDK_MORE_INSTALLER: ${OPENJDK_MORE_INSTALLER}
        MAVEN_VERSION: ${MAVEN_VERSION}
    ports:
      - "${OPENJDK_HOST_PORT_8080}:8080"
      - "${OPENJDK_HOST_PORT_8081}:8081"
      - "${OPENJDK_HOST_PORT_8082}:8082"
      - "${OPENJDK_HOST_PORT_8083}:8083"
    volumes:
      - ${CODE_PATH}:/app/webapps:rw
      - ${CONF_PATH}/openjdk/sh:/app/sh:rw
      - ${LOG_PATH}/openjdk:/app/log:rw
    entrypoint: ["/app/sh/start.sh"]
    restart: always
    environment:
      TZ: "${TZ}"
    networks:
      - tcmr

  mysql:
    container_name: tcmr_mysql
    build:
      context: mysql
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${CONF_PATH}/mysql/conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:rw
      - ${DATA_PATH}/mysql:/var/lib/mysql:rw
      - ${LOG_PATH}/mysql:/var/log/mysql:rw
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "${TZ}"
    networks:
      - tcmr

  mssql:
    container_name: tcmr_mssql
    build:
      context: mssql
      args:
        MSSQL_VERSION: ${MSSQL_VERSION}
    ports:
      - "${MSSQL_HOST_PORT}:1433"
    volumes:
      - ${DATA_PATH}/mssql:/var/opt/mssql:rw
    restart: always
    environment:
      SA_PASSWORD: "${MSSQL_SA_PASSWORD}"
      ACCEPT_EULA: Y
      TZ: "${TZ}"
    networks:
      - tcmr

  # mongodb:
  #   container_name: tcmr_mongodb
  #   build:
  #     context: mongodb
  #     args:
  #       MONGODB_VERSION: ${MONGODB_VERSION}
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
  #     MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
  #     TZ: "${TZ}"
  #   volumes:
  #     - ${DATA_PATH}/mongodb:/data/db:rw
  #     - ${DATA_PATH}/mongodb/mongo_key:/mongo:rw
  #     - ${LOG_PATH}/mongodb:/var/log/mongodb/:rw
  #   ports:
  #     - "${MONGODB_HOST_PORT}:27017"
  #   restart: always
  #   stdin_open: true
  #   tty: true
  #   networks:
  #     - tcmr
  #   command:
  #     --auth

  # redis:
  #   container_name: tcmr_redis
  #   build:
  #     context: redis
  #     args:
  #       REDIS_VERSION: ${REDIS_VERSION}
  #       ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
  #       ALPINE_REPOSITORIES_REPLACE: ${ALPINE_REPOSITORIES_REPLACE}
  #       TZ: ${TZ}
  #   ports:
  #     - "${REDIS_HOST_PORT}:6379"
  #   volumes:
  #     - ${CONF_PATH}/redis/conf/redis.conf:/etc/redis.conf:rw
  #     - ${DATA_PATH}/redis:/data:rw
  #   restart: always
  #   stdin_open: true
  #   tty: true
  #   entrypoint: ["redis-server", "/etc/redis.conf"]
  #   networks:
  #     - tcmr

  # rabbitmq:
  #   container_name: tcmr_rabbitmq
  #   build:
  #     context: rabbitmq
  #     args:
  #       RABBITMQ_VERSION: ${RABBITMQ_VERSION}
  #   ports:
  #     - "${RABBITMQ_HOST_PORT_C}:5672"
  #     - "${RABBITMQ_HOST_PORT_S}:15672"
  #   environment:
  #     RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
  #     RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
  #     TZ: "${TZ}"
  #   volumes:
  #     - ${LOG_PATH}/rabbitmq:/var/log/rabbitmq:rw
  #     - ${DATA_PATH}/rabbitmq:/var/lib/rabbitmq:rw
  #   stdin_open: true
  #   tty: true
  #   restart: always
  #   networks:
  #     - tcmr

  # phpredisadmin:
  #   container_name: tcmr_phpredisadmin
  #   build:
  #     context: phpredisadmin
  #     args:
  #       REDISMYADMIN_VERSION: ${REDISMYADMIN_VERSION}
  #       TZ: ${TZ}
  #   ports:
  #     - "${REDISMYADMIN_HOST_PORT}:80"
  #   environment:
  #     REDIS_1_HOST: "redis"
  #     REDIS_1_PORT: "6379"
  #   networks:
  #     - tcmr

  # nodejs:
  #   container_name: tcmr_nodejs
  #   build:
  #     context: nodejs
  #     args:
  #       ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
  #       ALPINE_REPOSITORIES_REPLACE: ${ALPINE_REPOSITORIES_REPLACE}
  #       NODEJS_VERSION: ${NODEJS_VERSION}
  #       TZ: ${TZ}
  #   ports:
  #     - "${NODEJS_HOST_PORT_3000}:3000"
  #     - "${NODEJS_HOST_PORT_8088}:8088"
  #   volumes:
  #     - ${CODE_PATH}:/app/www/:rw
  #   restart: always
  #   stdin_open: true
  #   tty: true
  #   networks:
  #     - tcmr

networks:
  tcmr:
