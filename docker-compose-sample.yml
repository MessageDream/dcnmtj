version: "3"
services:
  nginx:
    container_name: dcnmtj_nginx
    build:
      context: nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        ALPINE_REPOSITORIES_REPLACE: ${ALPINE_REPOSITORIES_REPLACE}
        TZ: ${TZ}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${CODE_PATH}:/app/webapps/:rw
      - ${CONF_PATH}/nginx/conf/conf.d:/etc/nginx/conf.d:rw
      - ${CONF_PATH}/nginx/conf/vhost:/etc/nginx/vhost:rw
      - ${CONF_PATH}/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${LOG_PATH}/nginx:/var/log/nginx/:rw
    stdin_open: true
    tty: true
    restart: always
    networks:
      - dcnmtj

  tomcat:
    container_name: dcnmtj_tomcat
    build:
      context: tomcat
      args:
        TOMCAT_VERSION: ${TOMCAT_VERSION}
        DEBIAN_REPOSITORIES_REPLACE: ${DEBIAN_REPOSITORIES_REPLACE}
    ports:
      - "${TOMCAT_HOST_PORT}:8080"
    volumes:
      - ${CONF_PATH}/tomcat/conf:/usr/local/tomcat/conf:rw
      - ${CODE_PATH}:/usr/local/webapps:rw
      - ${LOG_PATH}/tomcat:/usr/local/logs:rw
    restart: always
    environment:
      TOMCAT_JAVA_OPTS: "${TOMCAT_JAVA_OPTS}"
      SOURCES_REPLACE: "${SOURCES_REPLACE}"
      TZ: "${TZ}"
    networks:
      - dcnmtj

  mysql:
    container_name: dcnmtj_mysql
    build:
      context: mysql
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${CONF_PATH}/mysql/conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:rw
      - ${DATA_PATH}/mysql:/var/lib/mysql:rw
      - ${LOG_PATH}/mysql:/var/log/mysql:rw
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "${TZ}"
    networks:
      - dcnmtj

  mongodb:
    container_name: dcnmtj_mongodb
    build:
      context: mongodb
      args:
        MONGODB_VERSION: ${MONGODB_VERSION}
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
      TZ: "${TZ}"
    volumes:
      - ${DATA_PATH}/mongodb:/data/db:rw
      - ${DATA_PATH}/mongodb/mongo_key:/mongo:rw
      - ${LOG_PATH}/mongodb:/var/log/mongodb/:rw
    ports:
      - "${MONGODB_HOST_PORT}:27017"
    restart: always
    stdin_open: true
    tty: true
    networks:
      - dcnmtj
    command:
      --auth

  redis:
    container_name: dcnmtj_redis
    build:
      context: redis
      args:
        REDIS_VERSION: ${REDIS_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        ALPINE_REPOSITORIES_REPLACE: ${ALPINE_REPOSITORIES_REPLACE}
        TZ: ${TZ}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${CONF_PATH}/redis/conf/redis.conf:/etc/redis.conf:rw
      - ${DATA_PATH}/redis:/data:rw
    restart: always
    stdin_open: true
    tty: true
    entrypoint: ["redis-server", "/etc/redis.conf"]
    networks:
      - dcnmtj

  rabbitmq:
    container_name: dcnmtj_rabbitmq
    build:
      context: rabbitmq
      args:
        RABBITMQ_VERSION: ${RABBITMQ_VERSION}
    ports:
      - "${RABBITMQ_HOST_PORT_C}:5672"
      - "${RABBITMQ_HOST_PORT_S}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
      TZ: "${TZ}"
    volumes:
      - ${LOG_PATH}/rabbitmq:/var/log/rabbitmq:rw
      - ${DATA_PATH}/rabbitmq:/var/lib/rabbitmq:rw
    stdin_open: true
    tty: true
    restart: always
    networks:
      - dcnmtj

  phpredisadmin:
    container_name: dcntmj_phpredisadmin
    build:
      context: phpredisadmin
      args:
        REDISMYADMIN_VERSION: ${REDISMYADMIN_VERSION}
        TZ: ${TZ}
    ports:
      - "${REDISMYADMIN_HOST_PORT}:80"
    environment:
      REDIS_1_HOST: "redis"
      REDIS_1_PORT: "6379"
    networks:
      - dcnmtj

  nodejs:
    container_name: dcnmtj_nodejs
    build:
      context: nodejs
      args:
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        ALPINE_REPOSITORIES_REPLACE: ${ALPINE_REPOSITORIES_REPLACE}
        NODEJS_VERSION: ${NODEJS_VERSION}
        TZ: ${TZ}
    ports:
      - "${NODEJS_HOST_PORT_3000}:3000"
      - "${NODEJS_HOST_PORT_8088}:8088"
    volumes:
      - ${CODE_PATH}:/app/www/:rw
    restart: always
    stdin_open: true
    tty: true
    networks:
      - dcnmtj

networks:
  dcnmtj:
